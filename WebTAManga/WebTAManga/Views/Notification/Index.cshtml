@model List<WebTAManga.Models.Notification>

<div class="container mt-5">
    <h2><i class="fas fa-bell"></i> Hộp thư</h2>
    @if (Model.Any())
    {
        <ul class="list-group">
            @foreach (var notification in Model)
            {
                <li class="list-group-item @(notification.IsRead ? "read" : "unread")">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="mb-1">@notification.Message</p>
                            <small class="text-muted">
                                @((DateTime.Now - notification.CreatedAt).TotalHours < 24
                                    ? $"{(int)(DateTime.Now - notification.CreatedAt).TotalHours} giờ trước"
                                    : $"{(int)(DateTime.Now - notification.CreatedAt).TotalDays} ngày trước")
                            </small>
                        </div>
                        <div>
                            @if (!notification.IsRead)
                            {
                                <button class="btn btn-sm btn-outline-primary mark-as-read" data-notification-id="@notification.NotificationId">Đánh dấu đã đọc</button>
                            }
                            <a href="@notification.Link" class="btn btn-sm btn-primary">Xem</a>
                        </div>
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p><i class="fas fa-bell-slash"></i> Chưa có thông báo nào.</p>
    }
</div>

<style>
    .unread {
        background-color: #f8f9fa;
        font-weight: bold;
    }

    .read {
        background-color: #ffffff;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".mark-as-read").forEach(button => {
            button.addEventListener("click", function () {
                const notificationId = this.getAttribute("data-notification-id");
                fetch("/Notification/MarkAsRead", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "X-CSRF-TOKEN": document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ notificationId: parseInt(notificationId) })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const li = button.closest("li");
                        li.classList.remove("unread");
                        li.classList.add("read");
                        button.remove();
                    }
                })
                .catch(error => console.error("Error marking as read:", error));
            });
        });
    });
</script>