@model WebTAManga.Models.Chapter

<link rel="stylesheet" href="~/css/readchapter.css" asp-append-version="true" />

<style>
    .chapter-navigation .btn {
        font-size: 16px;
        padding: 10px 20px;
    }

    .chapter-navigation .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .chapter-navigation .btn-primary {
        background-color: #00c4ff;
        border-color: #00c4ff;
    }

    .chapter-selector .form-select {
        font-size: 16px;
        background-color: #fff;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .bottom-navigation {
        background-color: rgba(0, 0, 0, 0.9); 
        z-index: 1000; 
        width: 100%; 
        max-width: 600px; 
        margin: 0 auto; 
        border-radius: 10px; 
    }

    .bottom-navigation .btn {
        color: #fff; 
        font-size: 14px; 
        padding: 8px; 
    }
    .bottom-navigation .btn i {
        font-size: 18px;
    }

    .bottom-navigation .btn:disabled {
        opacity: 0.5; 
    }

    .bottom-navigation .chapter-selector {
        flex: 1; 
        min-width: 150px; 
        max-width: 200px; 
        margin: 0 5px; 
    }

    .bottom-navigation .chapter-selector .form-select {
        background-color: #fff; 
        color: #000; 
        font-size: 14px; 
        padding: 5px; 
        border-radius: 5px; 
        border: 1px solid #ccc;
        text-align: center; 
    }
</style>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3">
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3">
        @TempData["SuccessMessage"]
    </div>
}

<div class="container mt-5">
    <!-- Hiển thị tiêu đề chương -->
    <div class="text-center mt-4">
        <h2>@Model.ChapterTitle</h2>
        <p class="text-muted">Published on @Model.CreatedAt?.ToString("yyyy-MM-dd")</p>
    </div>

    <!-- Thanh điều hướng chương -->
    <div class="chapter-navigation mt-3 d-flex justify-content-between align-items-center">
        <div>
            @if (ViewBag.PreviousChapter == null)
            {
                <span class="btn btn-secondary disabled">
                    <i class="fas fa-arrow-left"></i> Chap trước
                </span>
            }
            else
            {
                <a href="@Url.Action("ReadChapter", "ReadChapter", new { id = ViewBag.PreviousChapter.ChapterId })"
                   class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Chap trước
                </a>
            }
        </div>
        <div>
            @if (ViewBag.NextChapter == null)
            {
                <span class="btn btn-primary disabled">
                    Chap sau <i class="fas fa-arrow-right"></i>
                </span>
            }
            else
            {
                <a href="@Url.Action("ReadChapter", "ReadChapter", new { id = ViewBag.NextChapter.ChapterId })"
                   class="btn btn-primary">
                    Chap sau <i class="fas fa-arrow-right"></i>
                </a>
            }
        </div>
    </div>
</div>

<!-- nội dung chương -->
<div class="mt-4">
    @if (ViewBag.IsUnlocked || ViewBag.IsPurchased)
    {
        @if (Model.ChapterImages != null && Model.ChapterImages.Any())
        {
            <div class="row justify-content-center">
                @foreach (var image in Model.ChapterImages.OrderBy(i => i.PageNumber))
                {
                    <div class="col-12 text-center">
                        <img src="~/@image.ImageUrl" alt="Page @image.PageNumber" class="img-fluid chapter-image">
                    </div>
                }
            </div>
        }
        else
        {
            <p>No images available for this chapter.</p>
        }
    }
    else
    {
        <div class="chapter-locked">
            <p>Chapter này đã bị khóa. Sử dụng <strong>@Model.Coins</strong> xu để mở khóa.</p>
            <form method="post" asp-controller="BuyChapter" asp-action="BuyChapter" asp-route-chapterId="@Model.ChapterId" id="buyChapterForm">
                <button type="button" class="btn btn-unlock" id="buyChapterBtn">Mua ngay</button>
            </form>
        </div>
    }
</div>

<!-- Thanh điều hướng dưới cùng -->
<div class="bottom-navigation fixed-bottom text-white p-2 d-flex justify-content-around align-items-center">
    <a href="@Url.Action("Index", "Home")" class="btn btn-dark">
        <i class="fas fa-home"></i>
    </a>
    <a href="@Url.Action("ReadChapter", "ReadChapter", new { id = ViewBag.PreviousChapter?.ChapterId })" 
       class="btn btn-dark" 
       @(ViewBag.PreviousChapter == null ? "disabled" : "") 
       onclick="@(ViewBag.PreviousChapter == null ? "alert('Không còn Chương ở trước nữa!'); return false;" : "")">
        <i class="fas fa-arrow-left"></i>
    </a>
    <!-- Dropdown chọn chương -->
    <div class="chapter-selector">
        @{
            var chapters = ViewBag.AllChapters as List<WebTAManga.Models.Chapter> ?? new List<WebTAManga.Models.Chapter>();
            var orderedChapters = chapters.OrderByDescending(c => 
                int.TryParse(c.ChapterTitle?.Replace("Chương ", ""), out int num) ? num : 0).ToList();
        }
        <select id="chapterSelect" class="form-select d-inline-block">
            @if (orderedChapters.Any())
            {
                @foreach (var chapter in orderedChapters)
                {
                    <option value="@chapter.ChapterId" @@(chapter.ChapterId == Model.ChapterId ? "selected" : "")>
                        @chapter.ChapterTitle
                    </option>
                }
            }
            else
            {
                <option value="" disabled>Không có chương</option>
            }
        </select>
    </div>
    <a href="@Url.Action("ReadChapter", "ReadChapter", new { id = ViewBag.NextChapter?.ChapterId })" 
       class="btn btn-dark" 
       @(ViewBag.NextChapter == null ? "disabled" : "") 
       onclick="@(ViewBag.NextChapter == null ? "alert('Không còn Chương tiếp theo nữa!'); return false;" : "")">
        <i class="fas fa-arrow-right"></i>
    </a>
    <button class="btn btn-dark">
        <i class="fas fa-undo"></i>
    </button>
    <button class="btn btn-dark">
        <i class="fas fa-heart"></i> Theo dõi
    </button>
</div>

<!-- Modal xác nhận mua chapter -->
<div class="modal fade" id="confirmPurchaseModal" tabindex="-1" aria-labelledby="confirmPurchaseModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmPurchaseModalLabel">Xác nhận mua chapter</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có muốn mua chapter "<strong>@Model.ChapterTitle</strong>" với giá <strong>@Model.Coins</strong> xu không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="confirmPurchaseBtn">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<script>
// Xử lý dropdown và điều hướng
document.addEventListener("DOMContentLoaded", function () {
    var select = document.getElementById('chapterSelect');
    if (select) {
        // Đảm bảo chọn đúng chapter khi trang tải
        var currentChapterId = @Model.ChapterId;
        for (var i = 0; i < select.options.length; i++) {
            if (parseInt(select.options[i].value) === currentChapterId) {
                select.selectedIndex = i;
                break;
            }
        }

        // Xử lý sự kiện thay đổi chapter
        select.addEventListener('change', function () {
            var chapterId = this.value;
            if (chapterId) {
                console.log("Đang chuyển đến chương ID: " + chapterId); 
                var url = '/ReadChapter/ReadChapter?id=' + chapterId; 
                window.location.href = url;
            } else {
                console.log("Không có chapterId hợp lệ!");
            }
        });
    } else {
        console.error("Element 'chapterSelect' không được tìm thấy!");
    }
});

// Xử lý trước khi rời trang
window.addEventListener("beforeunload", function () {
    let chapterId = @Model.ChapterId;
    let form = document.createElement("form");
    form.method = "POST";
    form.action = "/ReadChapter/CompleteReading/" + chapterId;
    document.body.appendChild(form);
    form.submit();
});

// Xử lý sự kiện nhấn nút "Mua ngay"
document.addEventListener("DOMContentLoaded", function () {
    var buyButton = document.getElementById('buyChapterBtn');
    var confirmButton = document.getElementById('confirmPurchaseBtn');
    var buyForm = document.getElementById('buyChapterForm');

    if (buyButton && confirmButton && buyForm) {
        // Khi nhấn "Mua ngay", hiển thị modal
        buyButton.addEventListener('click', function () {
            var modal = new bootstrap.Modal(document.getElementById('confirmPurchaseModal'));
            modal.show();
        });

        // Khi nhấn "Xác nhận" trong modal, gửi form
        confirmButton.addEventListener('click', function () {
            buyForm.submit();
        });
    } else {
        console.error("Không tìm thấy các phần tử cần thiết để xử lý mua chapter!");
    }
});
</script>