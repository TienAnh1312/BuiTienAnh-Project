@model WebTAManga.Areas.Admins.Models.GroupManagement

@{
    ViewData["Title"] = "Danh sách nhóm của vai trò " + (Model.Roles.FirstOrDefault()?.RoleName ?? "Không xác định");
    int stt = 1;
}

<div class="container mt-4">
    <h2 class="text-primary mb-4">@ViewData["Title"]</h2>

        <div class="mb-3">
            <a asp-action="ManageGroups" asp-controller="Groups" asp-area="Admins" class="btn btn-secondary btn-sm me-2">
                <i class="bi bi-arrow-left"></i> Quay lại
            </a>
            <a asp-action="CreateGroup" asp-controller="Groups" asp-area="Admins" class="btn btn-primary btn-sm">
                <i class="bi bi-plus-circle"></i> Tạo nhóm mới
            </a>
        </div>

        <div class="table-responsive mt-3">
            <table class="table table-hover table-bordered align-middle">
                <thead class="table-dark text-center">
                    <tr>
                        <th style="width: 50px;">STT</th>
                        <th>Nhóm (Trưởng nhóm)</th>
                        <th>Số thành viên</th>
                        <th style="width: 250px;">Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Managers.Any())
                    {
                        @foreach (var manager in Model.Managers.Where(m => m.IsDepartmentHead.GetValueOrDefault()))
                        {
                            var members = Model.Admins.Where(a => a.ManagerId == manager.AdminId).ToList();
                            <tr>
                                <td class="text-center">@stt</td>
                                <td>@manager.Username</td>
                                <td class="text-center">@members.Count</td>
                                <td class="text-center">
                                    <a asp-action="AddMemberToGroup" asp-controller="Groups" asp-area="Admins" asp-route-managerId="@manager.AdminId" class="btn btn-success btn-sm text-white me-1">
                                        <i class="bi bi-person-plus" title="Thêm thành viên"></i>
                                    </a>
                                    <a asp-action="ViewMembersByGroup" asp-controller="Groups" asp-area="Admins" asp-route-managerId="@manager.AdminId" class="btn btn-info btn-sm text-white me-1">
                                        <i class="bi bi-eye" title="Xem thành viên"></i>
                                    </a>
                                    @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin") || manager.AdminId == int.Parse(User.FindFirst("AdminId")?.Value ?? "0"))
                                    {
                                        <form class="delete-group-form d-inline" data-manager-id="@manager.AdminId">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="managerId" value="@manager.AdminId" />
                                            <button type="submit" class="btn btn-danger btn-sm text-white">
                                                <i class="bi bi-trash" title="Xóa nhóm"></i>
                                            </button>
                                        </form>
                                    }
                                </td>
                            </tr>
                            stt++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center">Không có nhóm nào cho vai trò này.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            // Xử lý xóa nhóm bằng AJAX
            $('.delete-group-form').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                var managerId = form.data('manager-id');

                if (!confirm('Bạn có chắc muốn xóa nhóm này?')) {
                    return;
                }

                $.ajax({
                    url: '@Url.Action("DeleteGroup", "Groups", new { area = "Admins" })',
                    type: 'POST',
                    data: form.serialize(),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    beforeSend: function () {
                        form.find('button').prop('disabled', true).html('<i class="bi bi-spinner bi-spin"></i> Đang xóa...');
                    },
                    success: function (result) {
                        if (result.success) {
                            toastr.success(result.message);
                            setTimeout(function () {
                                window.location.reload();
                            }, 2000);
                        } else {
                            toastr.error(result.message);
                            form.find('button').prop('disabled', false).html('<i class="bi bi-trash" title="Xóa nhóm"></i>');
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error('Có lỗi xảy ra: ' + (xhr.responseJSON?.message || error));
                        form.find('button').prop('disabled', false).html('<i class="bi bi-trash" title="Xóa nhóm"></i>');
                    }
                });
            });

            // Tự động đóng alert sau 3 giây
            const alert = document.querySelector('.alert-success');
            if (alert) {
                setTimeout(function () {
                    alert.classList.remove('show');
                    alert.classList.add('fade');
                }, 3000);
            }
        });
    </script>
}