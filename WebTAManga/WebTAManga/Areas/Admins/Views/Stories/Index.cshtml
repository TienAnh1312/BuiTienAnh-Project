@model WebTAManga.Areas.Admins.Controllers.StoryIndexView

@{
    ViewData["Title"] = "Quản lý Truyện";
    int stt = ((Model?.CurrentPage ?? 1) - 1) * 7 + 1;
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-primary">@ViewData["Title"]</h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-lg"></i> Tạo mới
        </a>
    </div>

    <!-- Success message -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Form tìm kiếm và bộ lọc -->
    <form asp-action="Index" method="get" class="mb-3">
        <div class="row g-3">
            <div class="col-md-3">
                <input type="text" name="searchTitle" value="@Model.SearchTitle"
                       class="form-control" placeholder="Tìm theo Tiêu đề" />
            </div>
            <div class="col-md-3">
                <input type="text" name="searchAuthor" value="@Model.SearchAuthor"
                       class="form-control" placeholder="Tìm theo Tác giả" />
            </div>
            <div class="col-md-3">
                <select name="filter" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="completed" @@(Model.Filter == "completed" ? "selected" : "")>Đã hoàn thành</option>
                    <option value="updating" @@(Model.Filter == "updating" ? "selected" : "")>Đang cập nhật</option>
                    <option value="hot" @@(Model.Filter == "hot" ? "selected" : "")>Hot</option>
                    <option value="new" @@(Model.Filter == "new" ? "selected" : "")>Mới</option>
                </select>
            </div>       
            <div class="col-md-3">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="bi bi-search" title="Tìm kiếm"></i>
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-clockwise" title="Đặt lại"></i>
                </a>
            </div>
        </div>
    </form>

    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle">
            <thead class="table-dark">
                <tr class="text-center">
                    <th style="width: 50px;">STT</th>
                    <th>Tên truyện</th>
                    <th>Ảnh bìa</th>
                    <th style="width:180px">Hành động</th>
                </tr>
            </thead>
            <tbody class="action">
                @if (Model.Stories != null && Model.Stories.Any())
                {
                    @foreach (var item in Model.Stories)
                    {
                        <tr>
                            <td class="text-center">@stt</td>
                            <td>@Html.DisplayFor(modelItem => item.Title)</td>
                            <td class="text-center">
                                <img src="~/@item.CoverImage" alt="Ảnh bìa" class="img-thumbnail" style="max-width: 70px;">
                            </td>
                            <td class="text-center">
                                <a asp-controller="Chapters" asp-action="Index" asp-route-storyId="@item.StoryId" class="btn btn-primary btn-sm me-1">
                                    <i class="fa-solid fa-list-ul" title="Danh sách chương"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@item.StoryId" class="btn btn-warning btn-sm me-1">
                                    <i class="bi bi-pencil-square" title="Sửa"></i>
                                </a>
                                <button class="btn btn-info btn-sm me-1 text-white ajax-action" data-bs-toggle="modal" data-bs-target="#storyModal" data-url="@Url.Action("Details", new { id = item.StoryId })" title="Chi tiết";">
                                    <i class="bi bi-info-circle"></i>
                                </button>
                                <button class="btn btn-danger btn-sm ajax-action" data-bs-toggle="modal" data-bs-target="#storyModal" data-url="@Url.Action("Delete", new { id = item.StoryId })" title="Xóa">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                        stt++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">Không tìm thấy truyện nào.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Phân trang -->
    <nav aria-label="Phân trang">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@(Model.CurrentPage - 1)"
                   asp-route-searchTitle="@Model.SearchTitle"
                   asp-route-searchAuthor="@Model.SearchAuthor"
                   asp-route-filter="@Model.Filter"
                   asp-route-searchGenre="@Model.SearchGenre"
                   aria-label="Trước">
                    <span aria-hidden="true">«</span>
                </a>
            </li>
            <li class="page-item @(Model.CurrentPage == 1 ? "active" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="1"
                   asp-route-searchTitle="@Model.SearchTitle"
                   asp-route-searchAuthor="@Model.SearchAuthor"
                   asp-route-filter="@Model.Filter"
                   asp-route-searchGenre="@Model.SearchGenre">1</a>
            </li>
            @if (Model.CurrentPage > 3)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
            @for (int i = Math.Max(2, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages - 1, Model.CurrentPage + 2); i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@i"
                       asp-route-searchTitle="@Model.SearchTitle"
                       asp-route-searchAuthor="@Model.SearchAuthor"
                       asp-route-filter="@Model.Filter"
                       asp-route-searchGenre="@Model.SearchGenre">@i</a>
                </li>
            }
            @if (Model.CurrentPage < Model.TotalPages - 2)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
            @if (Model.TotalPages > 1)
            {
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "active" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@Model.TotalPages"
                       asp-route-searchTitle="@Model.SearchTitle"
                       asp-route-searchAuthor="@Model.SearchAuthor"
                       asp-route-filter="@Model.Filter"
                       asp-route-searchGenre="@Model.SearchGenre">@Model.TotalPages</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@(Model.CurrentPage + 1)"
                   asp-route-searchTitle="@Model.SearchTitle"
                   asp-route-searchAuthor="@Model.SearchAuthor"
                   asp-route-filter="@Model.Filter"
                   asp-route-searchGenre="@Model.SearchGenre"
                   aria-label="Tiếp">
                    <span aria-hidden="true">»</span>
                </a>
            </li>
        </ul>
    </nav>

    <!-- Modal Container -->
    <div class="modal fade" id="storyModal" tabindex="-1" aria-labelledby="storyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="storyModalLabel">Quản lý Truyện</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Nội dung tải qua AJAX -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-danger" id="saveStory">Xóa</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Hàm SweetAlert tùy chỉnh
            const SweetAlert = {
                success: function (title, message, callback) {
                    Swal.fire({













































































































































































































































































































































































































































































































































































































                        icon: 'success',
                        title: title,
                        text: message,
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed && callback) callback();
                    });
                },
                error: function (title, message) {
                    Swal.fire({
                        icon: 'error',
                        title: title,
                        text: message,
                        confirmButtonText: 'OK'
                    });
                }
            };

            // Xử lý AJAX cho các nút hành động
            $(".ajax-action").click(function (e) {
                e.preventDefault();
                var url = $(this).data("url");

                // Tải nội dung vào modal
                $("#storyModal .modal-body").load(url, function (response, status, xhr) {
                    if (status === "error") {
                        SweetAlert.error('Lỗi!', 'Lỗi khi tải dữ liệu: ' + xhr.status + ' ' + xhr.statusText);
                    }
                });

                // Cập nhật tiêu đề modal dựa trên hành động
                var action = url.includes("Details") ? "Chi tiết Truyện" : "Xóa Truyện";
                $("#storyModalLabel").text(action);

                // Hiển thị hoặc ẩn nút Xóa dựa trên hành động
                if (url.includes("Details")) {
                    $("#saveStory").hide();
                } else {
                    $("#saveStory").show();
                }
            });

            // Xử lý nút Xóa trong modal
            $("#saveStory").click(function () {
                var form = $("#storyModal .modal-body form");
                if (form.length) {
                    $.ajax({
                        url: form.attr("action"),
                        type: form.attr("method"),
                        data: form.serialize(),
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                $("#storyModal").modal("hide");
                                SweetAlert.success('Thành công!', 'Truyện đã được xóa.', () => location.reload());
                            } else {
                                SweetAlert.error('Lỗi!', response.message || 'Không thể xóa truyện.');
                            }
                        },
                        error: function (xhr) {
                            var message = xhr.responseJSON?.message || 'Lỗi khi xóa truyện: ' + xhr.status + ' ' + xhr.statusText;
                            SweetAlert.error('Lỗi!', message);
                        }
                    });
                }
            });

            // Khởi tạo tooltip
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}